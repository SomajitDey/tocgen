#!/usr/bin/env -S bash -O extglob
# Brief: Markdown TOC Generator.

md_file="${1}" # The markdown file

error(){ echo -e "Error: ${1}"; exit 1;} >&2

if [[ -n "${md_file}" ]]; then
  [[ "${md_file}" == *.md ]] || error "Need a markdown file (*.md)"
  [[ -f "${md_file}" ]] || error "File does not exist"
else
  files=(*.md)
  if ((${#files[@]} == 1)) && [[ "${files}" != '*.md' ]]; then
    echo "Going with ${files}"
    md_file="${files}"
  else
    error "Provide markdown file as: ${0} <path-to-file>"
  fi
fi >&2

sed -i '/## Table of Contents  /,/#####   /c\[TOC\]  ' "${md_file}" # Replace existing TOC, if any, with placeholder

gen_toc(){
  # Brief: Generate Table of Contents
  local hashes heading indent link
  echo "## Table of Contents  "
  echo "[![tocgen](https://img.shields.io/badge/Generated%20using-tocgen-blue)](https://github.com/SomajitDey/tocgen)  "
  while read -r hashes heading; do
    indent="${hashes//#/  }" # Every hash replaced by 2 spaces
    heading="${heading%%+( )}" # Remove trailing spaces
    link="${heading// /-}" # Replace spaces with dashes
    link="${link,,*}" # Make lowercase
    link="${link//[^[:alnum:]^-]/}" # Eliminate all non-alphanumeric & non-dash characters
    echo "${indent}- [${heading}](#${link})  "
  done
  echo -n "#####   "
} < <(sed -nE '/^```/,/^```/!{/^[#]+ /p}' "${md_file}" | tr -d \\r | sed 's/\[\([^]]*\)\]([^)]*)/\1/g')
# The first `sed` filters out headings only (exluding comment lines starting with # within codeblocks)
# The second `sed` eliminates all hyperlinks from those headings

toc="$(gen_toc)" # Holds the TOC to be injected at the placeholder

# Simulate in-place edit
buffer="$(cat "${md_file}")" # Hold the entire text from the file
trap 'rm -f ${tmpfile} 2>/dev/null' exit # Clean up in case of unforeseen/abrupt exit
tmpfile="$(mktemp)"
echo -n "${buffer//\[TOC\]  /"${toc}"}" > "${tmpfile}"
mv "${tmpfile}" "${md_file}" && echo "Done" >&2
